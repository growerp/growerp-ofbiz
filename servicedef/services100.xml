<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/services.xsd">
    <description>Growerp Services</description>
    <vendor></vendor>
    <version>1.0</version>

    <service name="growerpPing" engine="java" export="true" require-new-transaction="true"
            location="org.apache.ofbiz.common.CommonServices"
            invoke="ping" action="GET">
        <description>Test Ping Service</description>
        <attribute name="message" type="String" mode="INOUT" optional="true"/>
    </service>

    <service name="getCompanies100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="getCompanies" action="GET" auth="false">
        <description>
            Get companies registered within the system or when partyId is provided a single company.
        </description>
        <attribute name="companyPartyId" type="String" mode="IN" optional="true"/><!-- if provided single company only -->
        <attribute name="classificationId" type="String" mode="IN" optional="true"/>
        <attribute name="companies" type="List" mode="OUT" optional="true"/>
        <attribute name="company" type="Map" mode="OUT" optional="true"/>
    </service> 

    <service name="updateCompany100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="updateCompany" action="POST">
        <description>
            Update company owned by company admin.
        </description>
        <attribute name="base64" type="String" mode="IN" optional="true"/>
        <attribute name="company" type="Map" mode="INOUT" optional="true"/>
    </service>

    <service name="checkCompany100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="checkCompany" action="GET" auth="false">
        <description>
            Check if company still available, returns 'ok' when it is.
        </description>
        <attribute name="companyPartyId" type="String" mode="IN" optional="false"/>
        <attribute name="ok" type="String" mode="OUT" optional="false"/>
    </service>

    <service name="createImages100" engine="groovy"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="createImages" auth="true">
        <description>
            Create a set of three images: full(original), medium, small
        </description>
        <attribute name="base64" type="String" mode="IN" optional="false"/>
        <attribute name="type" type="String" mode="IN" optional="false"/>
        <attribute name="id" type="String" mode="IN" optional="false"/>
    </service>
    
    <service name="registerUserAndCompany100" engine="groovy" export="true" 
        action="POST" auth="false"
        location="component://growerp/src/100/PartyServices100.groovy" 
                invoke="registerUserAndCompany">
        <description>
            Create a new company in the system (add admin person) later
        </description>

        <attribute name="companypartyId" type="String" mode="IN" optional="true"/>
        <attribute name="companyName" type="String" mode="IN"/>
        <attribute name="currencyId" type="String" mode="IN"/>
        <attribute name="classificationId" type="String" mode="IN"/>
        <attribute name="companyEmail" type="String" mode="IN"/>
        <attribute name="emailAddress" type="String" mode="IN"/>
        <attribute name="firstName" type="String" mode="IN"/>
        <attribute name="lastName" type="String" mode="IN"/>
        <attribute name="username" type="String" mode="IN"/>
        <attribute name="userGroupId" type="String" mode="IN"/>
        <attribute name="password" type="String" mode="IN"/><!-- just for test purposes  -->

        <attribute name="company" type="Map" mode="OUT" optional="true"/>
        <attribute name="user" type="Map" mode="OUT" optional="true"/>
    </service> 

    <service name="loadDefaultData100" engine="groovy"
        location="component://growerp/src/100/PartyServices100.groovy"
                invoke="loadDefaultdate">
        <attribute name="currencyId" type="String" mode="IN"/>
        <attribute name="classificationId" type="String" mode="IN"/>
        <attribute name="environment" type="String" mode="IN"/>
        <attribute name="transData" type="List" mode="IN"/>
    </service>

    <service name="updatePassword100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
            invoke="updatePassword" action="POST" auth="true">
        <attribute name="newPassword" type="String" mode="IN" optional="false"/>
    </service>

    <service name="resetPassword100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
            invoke="resetPassword" action="POST" auth="false">
        <description>Will send email with with new password when username/email is provided</description>
        <attribute name="username" type="String" mode="IN" optional="false"/>
    </service>

    <service name="getAuthenticate100" engine="groovy" export="true" action="GET"
            location="component://growerp/src/100/PartyServices100.groovy" 
            invoke="getAuthenticate" auth="true">
        <description>
            Get Company and user infor mation using token.
        </description>
        <attribute name="user" type="Map" mode="OUT" optional="true"/>
        <attribute name="company" type="Map" mode="OUT" optional="true"/>
    </service> 
    
    <service name="checkToken100" engine="groovy" export="true" action="GET"
            location="component://growerp/src/100/PartyServices100.groovy"
            invoke="checkToken" auth="true">
        <description>
            Check if token still valid.
        </description>
        <attribute name="ok" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="getUsers100" engine="groovy" export="true" action="GET"
        location="component://growerp/src/100/PartyServices100.groovy" 
                invoke="getUsers">
        <description>
            Get users registered within the system by company(admin only) or 
                when partyId is provided a single user.
        </description>
        <attribute name="userPartyId" type="String" mode="IN" optional="true"/><!-- if provided single user only -->
        <attribute name="companyPartyId" type="String" mode="IN" optional="true"/><!-- if provided get empl of company -->
        <attribute name="users" type="List" mode="OUT" optional="true"/>
        <attribute name="user" type="Map" mode="OUT" optional="true"/>
    </service> 

    <service name="getRelatedCompany100" engine="groovy"
        location="component://growerp/src/100/CommonServices100.groovy" 
                invoke="getRelatedCompany">
        <description>
            get related company of a user.
        </description>
        <attribute name="userPartyId" type="String" mode="IN" optional="true"/>
        <attribute name="companyPartyId" type="String" mode="OUT" optional="true"/>
    </service>
    
    <service name="createUser100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="createUser" action="POST">
        <description>
            Update User by himself or company admin.
        </description>
        <attribute name="companyPartyId" type="String" mode="IN" optional="true"/>
        <attribute name="user" type="Map" mode="INOUT" optional="false"/>
    </service>

    <service name="updateUser100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="updateUser" action="POST">
        <description>
            Update User by himself or company admin.
        </description>
        <attribute name="user" type="Map" mode="INOUT" optional="true"/>
    </service>

    <service name="deleteUser100" engine="groovy" export="true"
        location="component://growerp/src/100/PartyServices100.groovy"
        invoke="deleteUser" action="POST">
        <description>
            Update User by himself or company admin.
        </description>
        <attribute name="userPartyId" type="String" mode="IN" optional="false"/>
    </service>
</services>
